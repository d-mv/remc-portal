{"version":3,"sources":["styles/Logo.tsx","styles/NavBarButton.tsx","components/NavButton.tsx","styles/NavBarMenu.tsx","styles/NavBarMenuWrapper.tsx","styles/NavBarMenuButton.tsx","components/NavBarMenu.tsx","styles/NavBar.tsx","containers/NavBarMobile.tsx","components/NavBarDesktop.tsx","containers/Navigation.tsx","components/Main.tsx","styles/News.tsx","styles/NewsCard.tsx","components/NewsCard.tsx","containers/News.tsx","styles/DocCard.tsx","components/DocCard.tsx","styles/Documents.tsx","containers/Documents.tsx","styles/About.tsx","components/About.tsx","styles/Display.tsx","containers/App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","styled","div","_templateObject","NavButton","button","NavBarButton_templateObject","props","desktop","Active","_templateObject2","NonActive","_templateObject3","handleClick","e","toggle","_this","section","_this2","this","active","react_default","a","createElement","onClick","event","React","Component","NavBarMenu","NavBarMenu_templateObject","NavBarMenuWrapper","nav","NavBarMenuWrapper_templateObject","NavBarMenuSection","NavBarMenuButton_templateObject","choose","sections","styles_NavBarMenuWrapper","styles_NavBarMenu","map","NavBarMenuButton","key","NavBar","NavBar_templateObject","Mobile","NavBar_templateObject2","Desktop","NavBar_templateObject3","NavBarMobile","state","menuOpen","toggleMenu","setState","chooseSection","sectionsForMenu","filter","components_NavButton","mobile","components_NavBarMenu","Navigation","window","screen","width","NavBarDesktop","containers_NavBarMobile","Main","news","News_templateObject","message","News_templateObject2","card","NewsCard_templateObject","header","NewsCard_templateObject2","title","NewsCard_templateObject3","date","_templateObject4","text","_templateObject5","link","_templateObject6","NewsCard","id","item","NewsCard_text","NewsCard_link","News","data-test","length","newsItem","components_NewsCard","document","DocCard_templateObject","DocCard","Object","keys","DocCard_document","documents","Documents_templateObject","Documents_templateObject2","Documents","docItem","components_DocCard","Documents_message","about","About_templateObject","About","Display","Display_templateObject","App","_React$useState","_React$useState2","slicedToArray","setSection","sectionToShow","react","components_Main","containers_News","containers_Documents","categories","components_About","styles_Display","styles_Logo","containers_Navigation","Boolean","location","hostname","match","WebFonts","load","google","families","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32b2f69e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Logo = styled.div`\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 25px;\n  height: 25px;\n`;\n\nexport default Logo;\n","import styled, { StyledFunction } from \"styled-components\";\n\ninterface IProps {\n  desktop?: boolean;\n}\n\nconst NavButton = styled.button<IProps>`\n  padding: 0px 15px;\n  color: #162c9b;\n  background: none;\n  border: none;\n  font-family: Montserrat;\n  font-weight: 400;\n  font-size: ${props => (props.desktop ? \"1.2rem\" : \"5vw\")};\n  cursor: pointer;\n  outline: none;\n  user-select: none;\n`;\n\nconst Active = styled(NavButton)`\n  span {\n    border-bottom: 3px solid #95eb00;\n  }\n`;\nconst NonActive = styled(NavButton)`\n  span {\n    border-bottom: 3px solid white;\n  }\n`;\n\nexport { Active, NonActive };\n","import React from \"react\";\n\nimport * as NavButtonStyle from \"../styles/NavBarButton\";\n\ninterface IProps {\n  section: string;\n  active?: boolean;\n  mobile?: boolean;\n  desktop?: boolean;\n  toggle: any;\n}\n\nclass NavButton extends React.Component<IProps> {\n  private handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const { toggle } = this.props;\n    const { section } = this.props;\n    toggle(section);\n  };\n  render() {\n    const { active } = this.props;\n    const { section } = this.props;\n    const { desktop } = this.props;\n    const button = active ? (\n      <NavButtonStyle.Active\n        onClick={event => this.handleClick(event)}\n        desktop={desktop}\n      >\n        <span>{section}</span>\n      </NavButtonStyle.Active>\n    ) : (\n      <NavButtonStyle.NonActive\n        onClick={event => this.handleClick(event)}\n        desktop={desktop}\n      >\n        {section}\n      </NavButtonStyle.NonActive>\n    );\n\n    return button;\n  }\n}\n\nexport default NavButton;\n","import styled from \"styled-components\";\n\nconst NavBarMenu = styled.section`\n\n  padding: 10px;\n  text-align: center;\n  background-color: #162c9b;\n  color: white;\n  border-radius: 2px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n`;\n\nexport default NavBarMenu;\n","import styled from \"styled-components\";\n\nconst NavBarMenuWrapper = styled.nav`\n  position: absolute;\n  width: 40vw;\n  left: 30vw;\n  text-align: center;\n  padding-top: 7px;\n`;\n\nexport default NavBarMenuWrapper;\n","import styled from \"styled-components\";\n\nconst NavBarMenuSection = styled.button`\n  margin: 10px auto;\n  width: 100%;\n  background: none;\n  border: none;\n  color: white;\n  font-family: Montserrat;\n  font-weight: 400;\n  font-size: 5vw;\n  cursor: pointer;\n  outline: none;\n  user-select: none;\n`;\n\nexport default NavBarMenuSection;\n","import React from \"react\";\n\nimport MenuStyle from \"../styles/NavBarMenu\";\nimport WrapperStyle from \"../styles/NavBarMenuWrapper\";\nimport ButtonStyle from \"../styles/NavBarMenuButton\";\n\ninterface IProps {\n  choose: any;\n  sections: Array<string>;\n}\nclass NavBarMenu extends React.Component<IProps> {\n  private handleClick = (e: React.MouseEvent<HTMLElement>, section: string) => {\n    const { choose } = this.props;\n    choose(e, section);\n  };\n  render() {\n    const { sections } = this.props;\n    return (\n      <WrapperStyle>\n        <MenuStyle>\n          {sections.map(section => {\n            return (\n              <ButtonStyle\n                key={section}\n                onClick={event => this.handleClick(event, section)}\n              >\n                {section}\n              </ButtonStyle>\n            );\n          })}\n        </MenuStyle>\n      </WrapperStyle>\n    );\n  }\n}\n\nexport default NavBarMenu;\n","import styled from \"styled-components\";\n\nconst NavBar = styled.nav``;\n\nconst Mobile = styled(NavBar)`\n  margin: 0 auto;\n  width: 100%;\n  text-align: center;\n  /* display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center; */\n`;\n\nconst Desktop = styled(NavBar)`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nexport { Mobile, Desktop };\n","import React from \"react\";\n\nimport NavButton from \"../components/NavButton\";\nimport NavBarMenu from \"../components/NavBarMenu\";\n\nimport * as NavBar from \"../styles/NavBar\";\n\ninterface IProps {\n  active: string;\n  toggle: any;\n  sections: Array<string>;\n}\n\ninterface IState {\n  sections: Array<string>;\n  menuOpen: boolean;\n}\n\nclass NavBarMobile extends React.Component<IProps, IState> {\n  state = {\n    sections: this.props.sections,\n    menuOpen: false\n  };\n\n  toggleMenu = (e: React.MouseEvent<HTMLButtonElement>) => {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n\n  chooseSection = (e: React.MouseEvent<HTMLButtonElement>, section: string) => {\n    this.props.toggle(section);\n    this.toggleMenu(e);\n  };\n  render() {\n    const { active } = this.props;\n    const sectionsForMenu = this.state.sections.filter(\n      section => section !== this.props.active\n    );\n    return (\n      <NavBar.Mobile>\n        <NavButton mobile active toggle={this.toggleMenu} section={active} />\n        {this.state.menuOpen ? (\n          <NavBarMenu choose={this.chooseSection} sections={sectionsForMenu} />\n        ) : null}\n      </NavBar.Mobile>\n    );\n  }\n}\n\nexport default NavBarMobile;\n","import React from \"react\";\n\nimport NavButton from \"./NavButton\";\nimport * as NavBar from \"../styles/NavBar\";\n\ninterface IProps {\n  active: string;\n  toggle: any;\n  sections: Array<string>;\n}\n\nclass Navigation extends React.Component<IProps> {\n  render() {\n    const { active } = this.props;\n    const { toggle } = this.props;\n    return (\n      <NavBar.Desktop>\n        {this.props.sections.map(section => {\n          const button =\n            section === active ? (\n              <NavButton\n                active\n                desktop\n                section={section}\n                key={section}\n                toggle={toggle}\n              />\n            ) : (\n              <NavButton\n                desktop\n                section={section}\n                key={section}\n                toggle={toggle}\n              />\n            );\n          return button;\n        })}\n      </NavBar.Desktop>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nimport NavBarMobile from \"./NavBarMobile\";\nimport NavBarDesktop from \"../components/NavBarDesktop\";\ninterface IProps {\n  active: string;\n  toggle: any;\n}\n\ninterface IState {\n  desktop: boolean;\n  sections: Array<string>;\n}\n\nclass Navigation extends React.Component<IProps, IState> {\n  state = {\n    sections: [\"главная\", \"новости\", \"документы\", \"о нас\"],\n    desktop: true\n  };\n  componentWillMount() {\n    if (window.screen.width < 500) {\n      this.setState({\n        desktop: false\n      });\n    }\n  }\n  render() {\n    const { active } = this.props;\n    const { toggle } = this.props;\n    return this.state.desktop ? (\n      <NavBarDesktop\n        active={active}\n        toggle={toggle}\n        sections={this.state.sections}\n      />\n    ) : (\n      <NavBarMobile\n        active={active}\n        toggle={toggle}\n        sections={this.state.sections}\n      />\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nclass Main extends React.Component {\n  render() {\n    return <div>Main</div>;\n  }\n}\n\nexport default Main;\n","import styled from \"styled-components\";\n\nconst news = styled.section`\n    display: flex;\n    width: 100vw;\n    @media (max-width: 599px) {\n        flex-direction: column;\n    }\n    @media (min-width: 600px) {\n        flex-wrap: wrap;\n    }\n`;\n\nconst message = styled.div`\n    position: fixed;\n    top: 48vh;\n    width: 20vw;\n    left: 40vw;\n    text-align: center;\n    font-family: \"Open Sans\", Helvetica, Arial, sans-serif;\n    font-size: 1.5rem;\n    color: #162c9b;\n`;\n\nexport { news, message };\n","import styled from \"styled-components\";\n\nconst card = styled.section`\n    margin: 0 auto;\n    @media (max-width: 599px) {\n        width: 90%;\n    }\n    @media (min-width: 600px) {\n        width: 30%;\n    }\n`;\n\nconst header = styled.header``;\nconst title = styled.section``;\nconst date = styled.section``;\nconst text = styled.section``;\nconst link = styled.section``;\n\nexport { card, header, title, date, text, link };\n","import React from \"react\";\n\nimport * as Style from \"../styles/NewsCard\";\n\ninterface CardProps {\n    item: {\n        id: string;\n        title: string;\n        date: string;\n        source: string;\n        text: string;\n        link: string;\n    };\n}\nclass NewsCard extends React.Component<CardProps> {\n    render() {\n        return (\n            <Style.card id={this.props.item.id}>\n                <Style.header>\n                    <Style.title>{this.props.item.title}</Style.title>\n                    <Style.date id=\"date\">{this.props.item.date}</Style.date>\n                </Style.header>\n                <Style.text id=\"text\">{this.props.item.text}</Style.text>\n                <Style.link id=\"link\">{this.props.item.link}</Style.link>\n            </Style.card>\n        );\n    }\n}\n\nexport default NewsCard;\n","import React from \"react\";\n\nimport * as Style from \"../styles/News\";\nimport NewsCard from \"../components/NewsCard\";\n\n// temp db\n// const news = [\n//   {\n//     id: \"1\",\n//     title: \"news 1\",\n//     date: \"01/01/1990\",\n//     source: \"Newspaper #1\",\n//     text:\n//       \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean a felis vitae ipsum dignissim tincidunt sed consectetur ligula. Vestibulum risus metus, sodales nec tincidunt vel, luctus ut nisi. Nunc et orci vehicula, vulputate tellus vel, mattis tellus. Aenean vel turpis sed diam hendrerit condimentum. Maecenas elementum nisl nec metus consectetur dapibus. Curabitur id aliquet risus. Sed bibendum augue sed metus aliquam, vel efficitur ex euismod. Donec neque magna, lacinia sed lacinia auctor, fermentum congue justo. Curabitur sit amet mi elementum, molestie urna eu, lacinia arcu. Cras vel ante diam. Aenean imperdiet orci et libero auctor euismod. \",\n//     link: \"https://www.google.com\"\n//   },\n//   {\n//     id: \"2\",\n//     title: \"news 1\",\n//     date: \"01/01/1990\",\n//     source: \"Newspaper #1\",\n//     text:\n//       \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean a felis vitae ipsum dignissim tincidunt sed consectetur ligula. Vestibulum risus metus, sodales nec tincidunt vel, luctus ut nisi. Nunc et orci vehicula, vulputate tellus vel, mattis tellus. Aenean vel turpis sed diam hendrerit condimentum. Maecenas elementum nisl nec metus consectetur dapibus. Curabitur id aliquet risus. Sed bibendum augue sed metus aliquam, vel efficitur ex euismod. Donec neque magna, lacinia sed lacinia auctor, fermentum congue justo. Curabitur sit amet mi elementum, molestie urna eu, lacinia arcu. Cras vel ante diam. Aenean imperdiet orci et libero auctor euismod. \",\n//     link: \"https://www.google.com\"\n//   },\n//   {\n//     id: \"3\",\n//     title: \"news 1\",\n//     date: \"01/01/1990\",\n//     source: \"Newspaper #1\",\n//     text:\n//       \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean a felis vitae ipsum dignissim tincidunt sed consectetur ligula. Vestibulum risus metus, sodales nec tincidunt vel, luctus ut nisi. Nunc et orci vehicula, vulputate tellus vel, mattis tellus. Aenean vel turpis sed diam hendrerit condimentum. Maecenas elementum nisl nec metus consectetur dapibus. Curabitur id aliquet risus. Sed bibendum augue sed metus aliquam, vel efficitur ex euismod. Donec neque magna, lacinia sed lacinia auctor, fermentum congue justo. Curabitur sit amet mi elementum, molestie urna eu, lacinia arcu. Cras vel ante diam. Aenean imperdiet orci et libero auctor euismod. \",\n//     link: \"https://www.google.com\"\n//   },\n//   {\n//     id: \"4\",\n//     title: \"news 1\",\n//     date: \"01/01/1990\",\n//     source: \"Newspaper #1\",\n//     text:\n//       \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean a felis vitae ipsum dignissim tincidunt sed consectetur ligula. Vestibulum risus metus, sodales nec tincidunt vel, luctus ut nisi. Nunc et orci vehicula, vulputate tellus vel, mattis tellus. Aenean vel turpis sed diam hendrerit condimentum. Maecenas elementum nisl nec metus consectetur dapibus. Curabitur id aliquet risus. Sed bibendum augue sed metus aliquam, vel efficitur ex euismod. Donec neque magna, lacinia sed lacinia auctor, fermentum congue justo. Curabitur sit amet mi elementum, molestie urna eu, lacinia arcu. Cras vel ante diam. Aenean imperdiet orci et libero auctor euismod. \",\n//     link: \"https://www.google.com\"\n//   }\n// ];\n\n// format interface\ninterface NewsProps {\n    news: Array<object>;\n}\n\nclass News extends React.Component<NewsProps> {\n    render() {\n        return (\n            <Style.news id=\"news\" data-test=\"component-news\">\n                {this.props.news.length > 0 ? (\n                    this.props.news.map((newsItem: any) => {\n                        return (\n                            <NewsCard\n                                key={newsItem.id}\n                                item={newsItem}\n                                data-test=\"component-news-card\"\n                            />\n                        );\n                    })\n                ) : (\n                    <Style.message data-test=\"message-news\">\n                        Новостей нет\n                    </Style.message>\n                )}\n            </Style.news>\n        );\n    }\n}\n\nexport default News;\n","import styled from \"styled-components\";\n\nconst document = styled.div``;\n\nexport { document };\n","import React from \"react\";\n\nimport * as Style from \"../styles/DocCard\";\n\nconst DocCard = (document: any) => {\n    return Object.keys(document).length > 0 ? (\n        <Style.document data-test=\"component-document\">\n            {document}\n        </Style.document>\n    ) : null;\n};\n\nexport default DocCard;\n","import styled from \"styled-components\";\n\nconst documents = styled.section`\n    display: flex;\n    width: 100vw;\n    @media (max-width: 599px) {\n        flex-direction: column;\n    }\n    @media (min-width: 600px) {\n        flex-wrap: wrap;\n    }\n`;\n\nconst message = styled.div`\n    position: fixed;\n    top: 48vh;\n    width: 20vw;\n    left: 40vw;\n    text-align: center;\n    font-family: \"Open Sans\", Helvetica, Arial, sans-serif;\n    font-size: 1.5rem;\n    color: #162c9b;\n`;\n\nexport { documents, message };\n","import React from \"react\";\n\nimport DocCard from \"../components/DocCard\";\n\nimport * as Style from \"../styles/Documents\";\n\ninterface DocProps {\n    categories: [];\n    documents: [];\n}\nclass Documents extends React.Component<DocProps> {\n    render() {\n        return (\n            <Style.documents id=\"news\" data-test=\"component-documents\">\n                {this.props.documents.length > 0 ? (\n                    this.props.documents.map((docItem: any) => {\n                        return (\n                            <DocCard\n                                key={docItem.id}\n                                item={docItem}\n                                data-test=\"component-document-card\"\n                            />\n                        );\n                    })\n                ) : (\n                    <Style.message data-test=\"message-documents\">\n                        Документов нет\n                    </Style.message>\n                )}\n            </Style.documents>\n        );\n    }\n}\n\nexport default Documents;\n","import styled from \"styled-components\";\n\nconst about = styled.section``;\n\nexport { about };\n","import React from \"react\";\n\nimport * as Style from \"../styles/About\";\n\nclass About extends React.Component {\n    render() {\n        return <Style.about data-test=\"component-about\">About</Style.about>;\n    }\n}\n\nexport default About;\n","import styled from \"styled-components\";\n\nconst Display = styled.section`\n  margin: 0 auto;\n  width: 100%;\n`;\n\nexport default Display;\n","import * as React from \"react\";\n\nimport Logo from \"../styles/Logo\";\nimport Navigation from \"./Navigation\";\nimport Main from \"../components/Main\";\nimport News from \"./News\";\nimport Documents from \"./Documents\";\nimport About from \"../components/About\";\n\nimport Display from \"../styles/Display\";\n\nconst App = () => {\n    const [section, setSection] = React.useState(\"главная\");\n    let sectionToShow = <Main />;\n\n    switch (section) {\n        case \"новости\":\n            sectionToShow = (\n                <News\n                    news={\n                        [\n                            //       {\n                            //   id: \"1\",\n                            //   title: \"news 1\",\n                            //   date: \"01/01/1990\",\n                            //   source: \"Newspaper #1\",\n                            //   text:\n                            //     \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean a felis vitae ipsum dignissim tincidunt sed consectetur ligula. Vestibulum risus metus, sodales nec tincidunt vel, luctus ut nisi. Nunc et orci vehicula, vulputate tellus vel, mattis tellus. Aenean vel turpis sed diam hendrerit condimentum. Maecenas elementum nisl nec metus consectetur dapibus. Curabitur id aliquet risus. Sed bibendum augue sed metus aliquam, vel efficitur ex euismod. Donec neque magna, lacinia sed lacinia auctor, fermentum congue justo. Curabitur sit amet mi elementum, molestie urna eu, lacinia arcu. Cras vel ante diam. Aenean imperdiet orci et libero auctor euismod. \",\n                            //   link: \"https://www.google.com\"\n                            // }\n                        ]\n                    }\n                />\n            );\n            break;\n        case \"документы\":\n            sectionToShow = <Documents categories={[]} documents={[]} />;\n            break;\n        case \"о нас\":\n            sectionToShow = <About />;\n            break;\n    }\n    return (\n        <Display>\n            <Logo />\n            <Navigation active={section} toggle={setSection} />\n            {sectionToShow}\n        </Display>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebFonts from 'webfontloader'\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nWebFonts.load({\n  google: {\n    families: [\n      'Montserrat:400,400i,500:cyrillic',\n      'Open+Sans:300,300i,400',\n    ]\n  }\n});\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}